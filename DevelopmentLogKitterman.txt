The first day of working on our project. Today me and Carson started writing a class that can recognize Ruby code. If the inputted code is not legit ruby code, it screams at you and throws some exceptions. I am also starting to relearn ruby. The toughest part about it is that in Ruby, for loops are nowhere similar to those in Java. The while loops are also pretty crazy. We'll need to implement the whole loop syntax in an "if" statement, and if it is ever so slightly wrong, we'll throw an exception and reprompt the user. There are also a lot more loops and statements in Ruby, so that's more that can go wrong in our program. We'll have to save their whole input as a string then save several ints and strings and use .split() method then check each element to see if it matches the syntax we've written. 


2/11/16
Today the battle continues. Ruby is a stupid piece of garbage because half of it doesn't make any sense. Even Git seems to be better. At least in Java you don't have to put a dollar sign before every single variable. Alas, I have also started writing the first method of our project. It recognizes loops in ruby and tells the user what they should write in their Java compiler that they have downloaded maybe. It's pretty functional, but you have to be 100 percent correct in your code writing. If you deviate from the standard at all, the code will print "Nope." and then end itself. I think this really encourages people to get better at the language they are writing in(Ruby). I will continue writing the program until it is more user friendly and accepts deviations from the norm. It will be hard though, as I'll have to write if() 98504783246823974 times. It will probably be worth it though because this is a really good program and will help a lot of people in their struggles.

2/19/16
Trying to program a project that recognizes the entirety of Ruby was definetely a bad idea. We can't do it at our specified deadline so we changed it. The rest of the class I was writing our new deliverable. It will only recognize the loops and statements in Ruby. It's going to be much easier. We also changed the second deliverable to our original first deliverable that recognizes all of Ruby. So far the program is going well. It can recognize while loops, for loops, and until loops. Implementing Ruby into Java was a lot easier than I thought it would be. Basically I need to write code that accepts basic syntax for Ruby and checks it against things that are already written. It can also recognize break statements, retry statements and redo statements. It's working pretty well so far, we just need to implement the rest of the loops and statements.
